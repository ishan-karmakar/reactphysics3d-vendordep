name: CI

on:
  push:
    branches: [ main ]

jobs:
  build-host:
    if: ${{ !startsWith(github.event.head_commit.message, '[bot]') }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            artifact-name: Linux
            prereqs: ./gradlew installRoboRioToolchain installArm32Toolchain installArm64Toolchain
            architecture: x64
          - os: windows-latest
            artifact-name: Win64
            build-options: -Ponlywindowsx86-64
            architecture: x64
          # - os: macos-14
          #   artifact-name: macOS
          #   architecture: aarch64
          #   build-options: -Ponlyosxuniversal
    name: "Build - ${{ matrix.artifact-name }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          architecture: ${{ matrix.architecture }}
      - name: Prerequisites
        run: ${{ matrix.prereqs }}
      - name: Build with Gradle
        run: ./gradlew build -PreleaseMode -PnoTests ${{ matrix.build-options }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: build/allOutputs
  combine:
    name: Combine
    runs-on: ubuntu-latest
    needs: [build-host]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: wpilibsuite/build-tools
      - uses: actions/download-artifact@v4
        with:
          path: combiner/products/build/allOutputs
      - name: Flatten Artifacts
        run: rsync -a --delete combiner/products/build/allOutputs/*/* combiner/products/build/allOutputs/
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Combine
        run: ./gradlew publish -Pthirdparty -PreleaseRepoPublish
        working-directory: combiner
      - uses: actions/upload-artifact@v4
        with:
          name: Maven
          path: ~/releases/maven/release
  push:
    name: Push to branch
    runs-on: ubuntu-latest
    needs: combine
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: Maven
          path: ~/releases
      - name: Copy releases from main
        continue-on-error: true
        run: |
          rm -rf releases
          git checkout origin/main -- releases
      - name: Combine new release
        run: |
          mkdir -p releases
          cp -r ~/releases/* releases/
      - name: Push to branch
        run: |
          git config --global user.name "Ishan Karmakar"
          git config --global user.email "ishan.karmakar24@gmail.com"
          git add .
          git commit -m "[bot] Update releases"
          git push
